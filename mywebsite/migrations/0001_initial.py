# Generated by Django 5.2 on 2025-06-30 08:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand_logos/')),
                ('country_of_origin', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BusinessConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=200)),
                ('business_phone', models.CharField(max_length=20)),
                ('whatsapp_number', models.CharField(max_length=20)),
                ('business_email', models.EmailField(max_length=254)),
                ('business_address', models.TextField()),
                ('whatsapp_message_template', models.TextField(default="Hello! I'm interested in your {car_year} {car_brand} {car_model}. Price: KES {car_price}. Is it still available?", help_text='Use placeholders: {car_year}, {car_brand}, {car_model}, {car_price}')),
                ('opening_hours', models.CharField(default='Mon-Sat: 8:00 AM - 6:00 PM', max_length=100)),
                ('website_title', models.CharField(max_length=200)),
                ('website_description', models.TextField()),
                ('website_keywords', models.TextField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Business Configuration',
                'verbose_name_plural': 'Business Configuration',
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('answer', models.TextField()),
                ('category', models.CharField(choices=[('buying', 'Buying Cars'), ('selling', 'Selling Cars'), ('rental', 'Car Rental'), ('financing', 'Financing'), ('general', 'General')], max_length=20)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['county', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True, max_length=300, null=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_description', models.TextField(blank=True, max_length=300, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('views_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2030)])),
                ('condition', models.CharField(choices=[('new', 'Brand New'), ('used_local', 'Used (Local)'), ('used_foreign', 'Used (Foreign Import)')], max_length=20)),
                ('engine_size', models.DecimalField(decimal_places=1, help_text='Engine size in liters', max_digits=3)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('hybrid', 'Hybrid'), ('electric', 'Electric'), ('lpg', 'LPG')], max_length=20)),
                ('transmission', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('cvt', 'CVT')], max_length=20)),
                ('drive_type', models.CharField(choices=[('fwd', 'Front Wheel Drive'), ('rwd', 'Rear Wheel Drive'), ('awd', 'All Wheel Drive'), ('4wd', '4 Wheel Drive')], max_length=10)),
                ('mileage', models.IntegerField(help_text='Mileage in kilometers')),
                ('color', models.CharField(max_length=50)),
                ('doors', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(5)])),
                ('seats', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(9)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('negotiable', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('sold', 'Sold'), ('reserved', 'Reserved'), ('under_maintenance', 'Under Maintenance')], default='available', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, help_text='List of features separated by commas', null=True)),
                ('country_of_import', models.CharField(blank=True, max_length=100, null=True)),
                ('import_duty_paid', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('views_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mywebsite.brand')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cars', models.ManyToManyField(related_name='comparisons', to='mywebsite.car')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='car_images/')),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mywebsite.car')),
            ],
            options={
                'ordering': ['order', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('body_type', models.CharField(choices=[('sedan', 'Sedan'), ('suv', 'SUV'), ('hatchback', 'Hatchback'), ('coupe', 'Coupe'), ('convertible', 'Convertible'), ('wagon', 'Station Wagon'), ('pickup', 'Pickup Truck'), ('van', 'Van'), ('crossover', 'Crossover')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_models', to='mywebsite.brand')),
            ],
            options={
                'ordering': ['brand__name', 'name'],
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.AddField(
            model_name='car',
            name='car_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mywebsite.carmodel'),
        ),
        migrations.CreateModel(
            name='CarRental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('weekly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('monthly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('minimum_age', models.IntegerField(default=21)),
                ('requires_license', models.BooleanField(default=True)),
                ('requires_deposit', models.BooleanField(default=True)),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('max_rental_days', models.IntegerField(default=30)),
                ('mileage_limit_per_day', models.IntegerField(blank=True, help_text='Daily mileage limit in KM', null=True)),
                ('extra_mileage_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('rental_status', models.CharField(choices=[('available', 'Available'), ('rented', 'Currently Rented'), ('maintenance', 'Under Maintenance'), ('unavailable', 'Unavailable')], default='available', max_length=20)),
                ('terms_and_conditions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('car', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rental_info', to='mywebsite.car')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inquiry_type', models.CharField(choices=[('purchase', 'Purchase Inquiry'), ('rental', 'Rental Inquiry'), ('general', 'General Inquiry')], max_length=20)),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_phone', models.CharField(max_length=20)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('message', models.TextField()),
                ('preferred_contact_method', models.CharField(choices=[('phone', 'Phone Call'), ('whatsapp', 'WhatsApp'), ('email', 'Email')], default='whatsapp', max_length=20)),
                ('status', models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('in_progress', 'In Progress'), ('closed', 'Closed')], default='new', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Internal notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inquiries', to='mywebsite.car')),
            ],
            options={
                'verbose_name_plural': 'Customer Inquiries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='car',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mywebsite.location'),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_location', models.CharField(blank=True, max_length=100, null=True)),
                ('message', models.TextField()),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_featured', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('car_purchased', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mywebsite.car')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
